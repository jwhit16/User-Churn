/* Take a look at the first 100 rows of data in the subscriptions table. */

 SELECT *
 FROM subscriptions
 LIMIT 100;
 
 
 /* Determine the range of months of data provided. */
 
 SELECT MIN(subscription_start),
 MAX(subscription_start)
 FROM subscriptions;
 
 
  /* Create a temporary table of months. */
  
WITH months AS (
  SELECT 
    '2017-01-01' AS first_day, 
    '2017-01-31' AS last_day 
  UNION 
  SELECT 
    '2017-02-01' AS first_day, 
    '2017-02-28' AS last_day 
  UNION 
  SELECT 
    '2017-03-01' AS first_day, 
    '2017-03-31' AS last_day
),


  /* Create a temporary table, cross_join, from subscriptions and your months. */
  
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months)


/* Create a temporary table, status, from the cross_join table you created. */

status AS
(SELECT 
 id,
 first_day as month,
 CASE
   WHEN (subscription_start < first_day) AND (subscription_end > last_day) OR (subscription_end IS NULL) AND (segment = 87)      THEN 1
   ELSE 0
 END AS is_active_87,
 CASE
   WHEN (subscription_start < first_day) AND (subscription_end > last_day) OR (subscription_end IS NULL) AND (segment = 30)      THEN 1
   ELSE 0
 END AS is_active_30
 FROM cross_join)
 
 
 /* Add an is_canceled_87 and an is_canceled_30 column to the status temporary table. */
 
status AS
(SELECT 
 id,
 first_day as month,
 CASE
   WHEN (subscription_start < first_day) AND (subscription_end > last_day) OR (subscription_end IS NULL) AND (segment = 87)      THEN 1
   ELSE 0
 END AS is_active_87,
 CASE
   WHEN (subscription_start < first_day) AND (subscription_end > last_day) OR (subscription_end IS NULL) AND (segment = 30)      THEN 1
   ELSE 0
 END AS is_active_30,
 CASE
   WHEN (subscription_end between first_day AND last_day) AND (segment = 87) THEN 1
   ELSE 0
 END AS is_canceled_87,
  CASE
   WHEN (subscription_end between first_day AND last_day) AND (segment = 30) THEN 1
   ELSE 0
 END AS is_canceled_30
 FROM cross_join
)


 /* Create a status_aggregate temporary table that is a SUM of the active and canceled subscriptions for each segment, for each month. */

status_aggregate AS
(SELECT
  month,
  SUM(is_active_87) AS sum_active_87,
  SUM(is_active_30) AS sum_active_30,
  SUM(is_canceled_87) AS sum_canceled_87,
  SUM(is_canceled_30) AS sum_canceled_30
FROM status
GROUP BY month
)


 /* Calculate the churn rates for the two segments over the three month period.*/

SELECT 
month,
1.0 * sum_active_87 / sum_canceled_87 AS churn_87,
1.0 * sum_active_30 / sum_canceled_30 AS churn_30
FROM status_aggregate;


